<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 25 May 2015 02:41:19 -0700</pubDate>
    <lastBuildDate>Mon, 25 May 2015 02:41:19 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 24 May 2015 18:50:57 -0700</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/05/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/05/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Done with Lynda Rails course</title>
        <description>&lt;p&gt;Well, like the title says, I finally finished the Lynda &lt;a href=&quot;http://www.lynda.com/ViewCertificate/B415945D75004B3B88CD7A106F9F0112&quot; target=&quot;_blank&quot;&gt;Ruby On Rails 4 Essentials&lt;/a&gt; course. Took me a lot longer than I thought. While it&#39;s just under 13 hours of video content in actuality it takes about twice that to get through it. You&#39;ll end up frequently pausing to copy down code, complete &#39;assignments&#39;, try things out, get a snack, etc. Still, I can&#39;t recommend the course enough. I found it much more comprehensive than either the &lt;a href=&quot;https://class.coursera.org/webapplications-003&quot; target=&quot;_blank&quot;&gt;Coursera course&lt;/a&gt; (which I am STILL waiting on them to finish grading so I can get my certificate that I paid for) or &lt;a href=&quot;https://www.railstutorial.org/&quot; target=&quot;_blank&quot;&gt;Hartl&#39;s tutorial&lt;/a&gt; (which I haven&#39;t finished yet). While I am definitely not an expert, I feel like I am now at the point where I could interview for a Jr. Rails Developer position and not make a total fool out of myself. So it&#39;s time to polish up my resume and start sending it out.&lt;/p&gt;
&lt;p&gt;In the meantime I am going to jump back to more traditional Computer Science stuff. I have CS:318 - Software Engineering Principles and CS:313 - Operating System Principles coming up in a few weeks through UAT. I want to finish up &lt;a href=&quot;http://algs4.cs.princeton.edu/home/&quot; target=&quot;_blank&quot;&gt;Algorithms, 4th Ed&lt;/a&gt; and &lt;a href=&quot;http://www.amazon.com/Java-Program-Early-Objects-Edition/dp/0133807800&quot; target=&quot;_blank&quot;&gt;Java: How To Program&lt;/a&gt; before they start. Java is still my favorite language to work in. Very C++ like, except not quite so picky. I&#39;m seriously considering getting my Oracle Certified Java Programmer. I know that certs aren&#39;t looked highly on by developers (well specifically the developers in r/cscareerquestions), but I think having something on paper from a recognized institution wouldn&#39;t be a bad thing, considering I still won&#39;t have on-paper C.S. degree.&lt;/p&gt;
&lt;p&gt;I also need to finish up the Rails version of &lt;a href=&quot;http://willcodeforfood.io/&quot; target=&quot;_blank&quot;&gt;my job board&lt;/a&gt;. It&#39;s almost ready for launch, I think. Few more tweaks and it should be good. I still think it will be a great portfolio piece.&lt;/p&gt;
</description>
        <pubDate>Thu, 21 May 2015 00:00:52 -0700</pubDate>
        <link>http://yourdomain.com/learning/2015/05/21/done-with-lynda-rails-course.html</link>
        <guid isPermaLink="true">http://yourdomain.com/learning/2015/05/21/done-with-lynda-rails-course.html</guid>
        
        <category>Algorithms</category>
        
        <category>Java</category>
        
        <category>Rails</category>
        
        
        <category>learning</category>
        
      </item>
    
      <item>
        <title>60 Days!</title>
        <description>&lt;p&gt;Another milestone, 60 straight days of contributing to my &lt;a href=&quot;https://github.com/TaylorHuston&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;. I&#39;m quite proud of myself. I also finished both the Coursera &lt;a href=&quot;https://class.coursera.org/webapplications-003&quot; target=&quot;_blank&quot;&gt;Rails &lt;/a&gt;and &lt;a href=&quot;https://www.coursera.org/account/accomplishments/certificate/3EV3GP8MUW&quot; target=&quot;_blank&quot;&gt;Android&lt;/a&gt; courses I was taking. Should have gotten verified certificates in both (still waiting for the Rails course to finish processing I think). Speaking of Rails, I&#39;m continually impressed with &lt;a href=&quot;http://www.lynda.com/&quot; target=&quot;_blank&quot;&gt;Lynda&lt;/a&gt;. I finished their &lt;a href=&quot;http://www.lynda.com/ViewCertificate/E2C415354F124097B7F4422CADA35F49&quot; target=&quot;_blank&quot;&gt;Ruby Essentials&lt;/a&gt; course, and am about halfway through their &lt;a href=&quot;http://www.lynda.com/Ruby-Rails-tutorials/Ruby-Rails-4-Essential-Training/139989-2.html&quot; target=&quot;_blank&quot;&gt;Rails 4 Essentials&lt;/a&gt; course. Both courses are top-notch. The Coursera Rails course wasn&#39;t bad, but it was honestly pretty light. For a 6 week course there just wasn&#39;t a lot of content. You could easily power through it in a weekend if you wanted to. I&#39;m only halfway through the Lynda Rails course and it&#39;s already covered twice as much information. Barring any surprises I should have it done by the end of tomorrow.&lt;/p&gt;
&lt;p&gt;The next course in the Android Specialization started almost immediately after the last. I actually would have been happy if there was more of a break between the two, give me some time to keep focusing on Rails, and maybe finally finish the second part of the &lt;a href=&quot;https://class.coursera.org/algs4partII-005/&quot; target=&quot;_blank&quot;&gt;Algorithms&lt;/a&gt; course from Coursera. It technically doesn&#39;t end for another 9 days, but it&#39;s not a verified course or anything so there really isn&#39;t a time limit.&lt;/p&gt;
&lt;p&gt;Ugh, only so many hours in a day.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2015 00:00:49 -0700</pubDate>
        <link>http://yourdomain.com/life/2015/05/12/60-days.html</link>
        <guid isPermaLink="true">http://yourdomain.com/life/2015/05/12/60-days.html</guid>
        
        <category>Android</category>
        
        <category>Coursera</category>
        
        <category>Lynda</category>
        
        <category>Ruby on Rails</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Lynda Is Actually Pretty Good</title>
        <description>&lt;p&gt;I&#39;m sure if you&#39;re reading this you&#39;ve seen at least on YouTube pre-roll ad for &lt;a href=&quot;http://www.lynda.com/&quot; target=&quot;_blank&quot;&gt;Lynda.com&lt;/a&gt;. And I am here to tell you that if you&#39;ve been on the fence about signing up, you should probably do it. Just to get this out of the way, I&#39;m not like connected to Lynda in anyway, I don&#39;t have an affiliate partnership or anything, not making any money for referring people to them. I just recently re-signed up for their service and, so far, have been really impressed. I actually had an account with them a while back and cancelled it, for some reason. Can&#39;t remember why. But I wanted to watch some of their photography videos for fun, so I signed up for a month. Had every intention of cancelling it before it renewed, but now I am definitely going to keep it for a while.&lt;/p&gt;
&lt;p&gt;I started off by watching one of their &lt;a href=&quot;http://www.lynda.com/ViewCertificate/EE3205CDCCCC447499193AD792CAA02B&quot; target=&quot;_blank&quot;&gt;photography classes&lt;/a&gt;. Just started playing it while I ironed a bunch of clothes. And it was pretty well done. Production quality, information, etc, all good. When that was over I had 29 days left in the sub I had just paid for, so I decided to poke around the site a little. Saw they had a lot of what looked to be fairly in-depth programming related courses. Most were several hours of videos long. I still find it incredibly hilarious that my &lt;a href=&quot;http://www.uat.edu/&quot; target=&quot;_blank&quot;&gt;alma mater&lt;/a&gt; has online programs that cost 10&#39;s of thousands of dollars a year for what amounts to nothing beyond some power-point presentations, while all these services can have hours of actual video lectures for a fraction of that price/even free. In this case, since I am currently really focused on learning rails, I was impressed to see that they had a &lt;a href=&quot;http://www.lynda.com/Ruby-tutorials/essential-training/47905-2.html&quot; target=&quot;_blank&quot;&gt;7 hour course on Ruby alone&lt;/a&gt;, and then another &lt;a href=&quot;http://www.lynda.com/Ruby-Rails-tutorials/Ruby-Rails-4-Essential-Training/139989-2.html&quot; target=&quot;_blank&quot;&gt;12 hour course on Rails&lt;/a&gt;. I think the &lt;a href=&quot;https://www.coursera.org/course/webapplications&quot; target=&quot;_blank&quot;&gt;Coursera Rails course&lt;/a&gt; I am currently taking maybe has 4 hours of video content total?&lt;/p&gt;
&lt;p&gt;But before diving into either of those, I thought it would be interesting to check out their entry-level &#39;&lt;a href=&quot;http://www.lynda.com/ViewCertificate/C0A7DD5CC5774BAC9657E28623323B38&quot; target=&quot;_blank&quot;&gt;Foundations of Programming: Fundamentals&lt;/a&gt;&#39; course. I expected it to be really boring and redundant, a bunch of stuff I already knew, but something about it made me think I should at least check it out. And it is great. Yes it&#39;s all stuff I already knew. But that doesn&#39;t change the fact that it is really good information, the production value is great, &lt;a href=&quot;https://twitter.com/allardice&quot; target=&quot;_blank&quot;&gt;the instructor&lt;/a&gt; is really charismatic. The &lt;a href=&quot;https://www.coursera.org/course/posaconcurrency&quot; target=&quot;_blank&quot;&gt;Coursera Android course&lt;/a&gt; I am also taking has a bunch of video lectures. Probably a good 8-10 hours worth total. And they are both full of really good information, and really painful to watch. Just something about the delivery of them, I can barely force myself to sit through them. It certainly doesn&#39;t help that the audio is slightly out of sync with the video either, like watching a badly dubbed movie.&lt;/p&gt;
&lt;p&gt;Anyways, back to the Lynda course. It&#39;s great. It uses JavaScript to illustrate the concepts, but it&#39;s not a JavaScript class. It really is exactly what it says, Programming Fundamentals. There&#39;s an entire section about compiled vs interpreted languages. When he starts talking about variables, he takes the time to explain how JavaScript is weakly typed and contrasts that to how other languages are strongly typed. When he talks about arrays he makes sure to mention how some languages use mutable arrays while others use immutable. He touches on things like object orientated concepts, memory management and even algorithms. All conceptual things that any beginning programmer needs to know, that a lot of &#39;syntax tutorials&#39; ignore. And the entire ending module of the class is a series of lectures that give an overview of basically every popular language out there right now. I&#39;ve said before that the &lt;a href=&quot;http://taylorhuston.me/?p=167&quot; target=&quot;_blank&quot;&gt;best way to learn a language is to read a book&lt;/a&gt;. The reason for that is because I&#39;ve always found that most online classes are very tutorial-ish. More about telling you what to do in what order, not why you are doing them. Books are usually much better at going into the why. But that doesn&#39;t seem to be the case with Lynda courses, at least not the early or foundational ones. These are less like some online tutorial, and more like a legitimate college level lecture. They are less like something you might watch on &lt;a href=&quot;https://www.codeschool.com/&quot; target=&quot;_blank&quot;&gt;Codeschool&lt;/a&gt;, and more like something you would get from &lt;a href=&quot;http://ocw.mit.edu/index.htm&quot; target=&quot;_blank&quot;&gt;MIT Open Courseware&lt;/a&gt;, only at a higher production value and a bit more condensed (and no textbook required). There are several courses in this &#39;Foundations of Programming&#39; series, and I am getting the vibe that someone could take the time to watch them every night and, in a matter of a week or so, get the equivalent of the first year or so of a decent CS education. As someone who&#39;s dablled in and tried out a lot of different self study learn to program things, I can 100% say this is the best &#39;Intro To Programming&#39; course I&#39;ve come across, period.&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Apr 2015 00:00:17 -0700</pubDate>
        <link>http://yourdomain.com/study%20tips/2015/04/25/lynda-is-actually-pretty-good.html</link>
        <guid isPermaLink="true">http://yourdomain.com/study%20tips/2015/04/25/lynda-is-actually-pretty-good.html</guid>
        
        <category>JavaScript</category>
        
        <category>Lynda</category>
        
        
        <category>study tips</category>
        
      </item>
    
      <item>
        <title>Rails: I&#39;ve Seen The Light</title>
        <description>&lt;p&gt;I know it&#39;s been a while since I&#39;ve posted. Honestly, noting particularly noteworthy has happened. But I thought it&#39;d be good to touch base.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;strong&gt;30 Days:&lt;/strong&gt;&lt;/span&gt; I&#39;ve reached a personal milestone. 30 straight days of contributions to &lt;a href=&quot;https://github.com/TaylorHuston&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;. While I&#39;ve been coding almost every day for a while now, due to a lot of it being homework assignments and other things I can&#39;t make publicly available this is the first time I&#39;ve been able to actually push something to GitHub for a month straight. And it&#39;s really kept me motivated. Since I don&#39;t want to break the streak I am less likely to say &quot;man I coded all day yesterday, I&#39;m just going to take the day off&quot;.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;strong&gt;Rails:&lt;/strong&gt;&lt;/span&gt; Welp I&#39;ve seen the light. While I still think that JS syntax is &lt;a title=&quot;Focusing on JavaScript&quot; href=&quot;http://taylorhuston.me/?p=235&quot; target=&quot;_blank&quot;&gt;more intuitive&lt;/a&gt; to me, I can see why people love Rails. It is insanely easy to get a minimum viable product up and running quickly. And I can really see how the whole convention over configuration thing is great. You can look at any Rails app written by anyone and start with a pretty good idea of where everything is. I&#39;m about halfway done with the &lt;a href=&quot;https://www.coursera.org/course/webapplications&quot; target=&quot;_blank&quot;&gt;Coursera Rails&lt;/a&gt; course, and almost done with &lt;a href=&quot;https://www.railstutorial.org/&quot; target=&quot;_blank&quot;&gt;Michael Hartl&#39;s Book.&lt;/a&gt; After that I plan on reading through &lt;a href=&quot;http://www.amazon.com/Rails-Edition-Addison-Wesley-Professional-Series/dp/0321944275&quot; target=&quot;_blank&quot;&gt;The Rails 4 Way.&lt;/a&gt; I think at that point I will be to the point where I can start looking into entry level Rails jobs, or maybe a Bootcamp? Right now I am just creating the sample app outlined in Hartl&#39;s book directly, but after I am done with that my next project will be re-doing &lt;a href=&quot;http://willcodeforfood.io/&quot; target=&quot;_blank&quot;&gt;Will Code For Food&lt;/a&gt; in Rails. Should be an excellent learning opportunity.&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;&lt;strong&gt;Android:&lt;/strong&gt;&lt;/span&gt; I&#39;m also still in the middle of the second &lt;a href=&quot;https://www.coursera.org/course/posaconcurrency&quot; target=&quot;_blank&quot;&gt;Coursera Android&lt;/a&gt; course. I will admit though that I&#39;ve been so focused on Rails that I haven&#39;t been giving that class the attention it deserves. I am going to need to spend this week focusing on getting caught up on it. I also got a copy of &lt;a href=&quot;https://commonsware.com/Android/&quot; target=&quot;_blank&quot;&gt;The Busy Coder&#39;s Guide to Android Development&lt;/a&gt;. Haven&#39;t had a chance to really look at it, but it sounds like a great resource. For one thing, it&#39;s huge. At over 3000 pages it dwarfs any other programming book I&#39;ve come across. I also like that it&#39;s regularly updated. For something as ever-evolving as Android that&#39;s really important to me. I looked at some other Android books (I still stand by the assertion that the best way to learn something is to &lt;a title=&quot;Want to learn to program? Read a book!&quot; href=&quot;http://taylorhuston.me/?p=167&quot; target=&quot;_blank&quot;&gt;read a good book&lt;/a&gt;), and they were all already out of date. Couldn&#39;t find one that was highly rated and covered Android 5.0+. While I don&#39;t think a book that only went up to say, Android 4.4 wouldn&#39;t be full of useful information, I don&#39;t want to feel like I am being left behind in any way. Technology moves so fast that I think regularly updated online textbooks are the future.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Apr 2015 00:00:41 -0700</pubDate>
        <link>http://yourdomain.com/study%20tips/2015/04/13/rails-ive-seen-the-light.html</link>
        <guid isPermaLink="true">http://yourdomain.com/study%20tips/2015/04/13/rails-ive-seen-the-light.html</guid>
        
        <category>Android</category>
        
        <category>Rails</category>
        
        <category>Ruby</category>
        
        
        <category>study tips</category>
        
      </item>
    
      <item>
        <title>Back To Ruby?</title>
        <description>&lt;p&gt;A few weeks ago I posted that I was going to &lt;a title=&quot;Focusing on JavaScript&quot; href=&quot;http://taylorhuston.me/?p=235&quot;&gt;focus on JavaScript&lt;/a&gt;. At the time I meant it, I really do prefer JS syntax to Ruby. But &lt;a href=&quot;https://www.coursera.org/course/webapplications&quot; target=&quot;_blank&quot;&gt;Web Application Architectures&lt;/a&gt; course on Coursera just launched and I really want to take it. It sounds like a solid class. And it uses Ruby. So it&#39;s back to Ruby and RoR for the time being. Not that that&#39;s a bad thing. I had every intention of learning Ruby in a few weeks anyways. This is jut re-arranging my timetable a little bit. So for the meantime I will be putting JS stuff on hold and focusing on RoR. I think I will also use this as an excuse to re-write Will Code For Food in Ruby. I was originally planning on redoing using JS and Node, but this will probably work just as well. I will kind of use that as my &#39;capstone&#39; project for this Coursera class (not that it requires one, it has it&#39;s own programming assignments). Again, not a huge deal, and if I couldn&#39;t adapt to change or being thrown into new frameworks unexpectedly I wouldn&#39;t be a very good developer now would I?&lt;/p&gt;
&lt;p&gt;Speaking of Coursera, the second class of the&lt;a href=&quot;https://www.coursera.org/specialization/mobilecloudcomputing2/36&quot; target=&quot;_blank&quot;&gt; Android Specialization&lt;/a&gt; also started. And in a few days Advanced Software Development I starts through &lt;a href=&quot;http://www.uat.edu/&quot; target=&quot;_blank&quot;&gt;UAT&lt;/a&gt;. I actually have no idea what that class is about, but it sure sounds fancy. It doesn&#39;t even have a textbook to give me a clue. So, three fairly intensive classes at the same time. It&#39;s almost like I&#39;m a real student. Time for some all nighters and pizza?&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2015 02:01:44 -0700</pubDate>
        <link>http://yourdomain.com/2015/03/24/back-to-ruby.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2015/03/24/back-to-ruby.html</guid>
        
        <category>Rails</category>
        
        <category>Ruby</category>
        
        
      </item>
    
      <item>
        <title>Jack of all trades?</title>
        <description>&lt;p&gt;I get distracted easily. Or maybe a nicer way of putting it is I have a lot of interests.&lt;/p&gt;
&lt;p&gt;Lately, especially the last year, I&#39;ve really been focused on writing code. Auditing/self teaching my way through a CS degree. And I love it. I love writing code. But it&#39;s not what I&#39;ve always wanted to do, and not necessarily what I always want to do. When I was in college I did IT stuff. Geek Squad, Helpdesk for one ISP, IT contractor for another ISP, worked for a Managed Service Provider basically doing all the onsite work for a while. I took a Cisco class in High School, and I still technically have my A+ and Network+ certs. Sometimes I seriously think about going back and getting my CCNA and going down that route.&lt;/p&gt;
&lt;p&gt;I&#39;ve thought about getting some Linux certs as well. One would think that, if I am developing web apps that live on a Linux server somewhere, being able to admin that server would only be helpful.&lt;/p&gt;
&lt;p&gt;Or, another great example, something that I find really interesting and would love to sink my teeth into is InfoSec. Maybe it&#39;s a little cliche, but the thought of being a &#39;hacker&#39; has a certain....sexy appeal to it. Plus if it lands me a girl as pretty as young Angelina Jolee then it would be totally worth it (10 points if you get the reference). Sometimes I think about grabbing my Security+, then studying for and getting my Certified Ethical Hacker and seeing where that leads me. Not necessarily to help my career directly, but just because I find those topics interesting personally and I love to learn. I&#39;m not thinking that getting my CCNA would in any way directly help me land a a web developer job.&lt;/p&gt;
&lt;p&gt;But would it be worth it? Do employers like seeing someone who has a lot if interests, or do they not care if it isn&#39;t directly related to the job they are hiring you for? Is a lot of different skills and certifications on a resume going to make an interviewer think you&#39;re intelligent, ambitious and a quick learner, or that you&#39;re a jack of all trades, master of none? If it&#39;s a job as say, a Java developer, are they going to be impressed about anything you&#39;ve done that isn&#39;t directly related to writing code, or do they just want someone who does nothing but eat, sleep and write Java all day?&lt;/p&gt;
&lt;p&gt;And of course there&#39;s the opportunity cost. Even if an interviewer won&#39;t knock points off your application because you have your CCNA (especially if you don&#39;t mention it to them), at the end of the day the 100 hours you put into studying for it is 100 hours you could have put into writing all the code.&lt;/p&gt;
&lt;p&gt;If I was hiring, I&#39;d like to think I&#39;d be impressed by someone who has a variety of technical related interests. To me it would show curiosity and an ability to learn new things. I see someone who is really good at one thing and only focuses at one thing as someone who doesn&#39;t handle change very well. But that&#39;s just me, I&#39;ve never been in the position of having to interview or hire someone, so I really have no point of reference to base that on.&lt;/p&gt;
&lt;p&gt;What about you guys? Any developers out there who also happen to have their CCNA or something and had it help or hurt them in an interview? Anyone start off writing code, then get an interest in InfoSec, got some certs, and make the jump?&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Mar 2015 06:27:09 -0700</pubDate>
        <link>http://yourdomain.com/life/2015/03/17/jack-of-all-trades.html</link>
        <guid isPermaLink="true">http://yourdomain.com/life/2015/03/17/jack-of-all-trades.html</guid>
        
        <category>Cisco</category>
        
        <category>InfoSec</category>
        
        <category>IT</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>My JavaScript CMF</title>
        <description>&lt;p&gt;I&#39;ve&lt;a href=&quot;https://github.com/TaylorHuston/JSCMF&quot; target=&quot;_blank&quot;&gt; started a repo&lt;/a&gt; for a JavaScript based CMS system I plan on making. Well, I&#39;m not even sure if CMS is the proper term. Right now I don&#39;t think it will be a Content Management System so much as a Content Management Framework built on top of Node. Less of a way to manage content, and more of a way for Web Designers to create sites quickly and efficiently.&lt;br /&gt;
Here&#39;s what I envision:&lt;/p&gt;
&lt;p&gt;Three directories&lt;br /&gt;
Skeletons&lt;br /&gt;
Themes&lt;br /&gt;
Content&lt;/p&gt;
&lt;p&gt;In the Skeletons directory you will place one or more HTML skeletons that control the, well, HTML skeleton of the website. The only requirements will be that it has to have a navigation are with the id of mainNav and a div with the id of mainContent.&lt;/p&gt;
&lt;p&gt;In the Themes directory you will place the CSS files that control all of the styling of the website.&lt;/p&gt;
&lt;p&gt;In the Content directory will be HTML (maybe markdown?) files for each page.&lt;/p&gt;
&lt;p&gt;Essentially, the application will read the Content directory and generate a page for each file. It will start with the chosen skeleton HTML file, link the chose CSS file from the Themes directory, generate the mainNav based on the contents of the Content directory, and then fill in the mainContent div with the appropriate file from the Content directory.&lt;/p&gt;
&lt;p&gt;So it&#39;s not really a CMS in the traditional sense. No web interface. No database. A designer still has to hand code the HTML skeleton, the CSS layout, and each of the page contents. The app will then generate pure HTML files for the designer to use. Just an easier way to work on a hand coded site that has a large amount of pages.&lt;/p&gt;
&lt;p&gt;Since I really have no idea what I am doing yet, and mostly making it up as I go at the moment, I wouldn&#39;t be surprised if most (if not all) of this changes by the time it&#39;s &#39;complete&#39;, but in any case it should be a really fun learning project!&lt;/p&gt;
&lt;p&gt;EDIT: Turns out this is really similar (I think) to what &lt;a href=&quot;http://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;Jekyll &lt;/a&gt;does, although Jekyll is ruby based. Oh wells.&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Feb 2015 08:14:59 -0700</pubDate>
        <link>http://yourdomain.com/projects/2015/02/27/my-javascript-cms.html</link>
        <guid isPermaLink="true">http://yourdomain.com/projects/2015/02/27/my-javascript-cms.html</guid>
        
        <category>CMF</category>
        
        <category>JavaScript</category>
        
        <category>Node</category>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Focusing on JavaScript</title>
        <description>&lt;p&gt;I&#39;ve decided that, for the time being, I am going to focus most of my web related studying on JavaScript (and it&#39;s various libraries). I was working through &lt;a href=&quot;http://www.theodinproject.com/users/6736&quot; target=&quot;_blank&quot;&gt;The Odin Project&lt;/a&gt;, which is definitely a great project and a great curriculum, but it&#39;s primarily Ruby?rails focused. Not that there&#39;s anything wrong with Ruby, that was my first exposure to it and I can certainly see why people like it. But coming from a C++/Java background, I just find the syntax of JavaScript to be much more intuitive. Curly brackets, semicolons, all that jazz.&lt;/p&gt;
&lt;p&gt;I&#39;m sure I will revisit The Odin Project at some point, as well as Ruby in general, but I don&#39;t want to spread myself too thin. I think the biggest hurdle of self-teaching is getting distracted, is not knowing where to start or where to go next. You start learning one thing, hear about something else, jump to that, etc. Eventually you know the first 10% of a bunch of different topics, and not enough to actually create anything in any of them. So Ruby on Rails is going on the back burner for now. Right now I&#39;m still juggling learning JavaScript for web dev, keeping up to date on Java for &lt;a href=&quot;http://algs4.cs.princeton.edu/home/&quot; target=&quot;_blank&quot;&gt;Algorithms (Coursera)&lt;/a&gt;, and in a few weeks the second section of the &lt;a href=&quot;https://www.coursera.org/specialization/mobilecloudcomputing2/36&quot; target=&quot;_blank&quot;&gt;Android Specialization&lt;/a&gt; starts. Plus the classes from &lt;a href=&quot;http://www.uat.edu/&quot; target=&quot;_blank&quot;&gt;UAT &lt;/a&gt;I am auditing. I was supposed to be auditing Compilers starting this week, but the class was cancelled (not enough enrollment?) so I have a breather from that for the next 5 weeks. Throwing Ruby in the mix now is probably a bad idea.&lt;/p&gt;
&lt;p&gt;So getting back to JavaScript. I am already decently familiar with it. I&#39;ve used it for some basic stuff at my job for a while now. Like I mentioned most of the syntax for it is pretty intuitive given my background. I&#39;ve done the &lt;a href=&quot;http://www.codecademy.com/pyCoder84523&quot; target=&quot;_blank&quot;&gt;CodeCademy &lt;/a&gt;JavaScript and jQuery courses (which were a little dry but they got the job done). I&#39;ve done some of the JavaScript courses through &lt;a href=&quot;http://teamtreehouse.com/taylorhuston&quot; target=&quot;_blank&quot;&gt;Treehouse &lt;/a&gt;the free intro JavaScript and jQuery classes from &lt;a href=&quot;https://www.codeschool.com/users/1207974&quot; target=&quot;_blank&quot;&gt;CodeSchool&lt;/a&gt;. I actually really enjoyed the Codeschool ones and I was planning on subscribing to them and continuing down the track until I remember that Udacity has some as part of their &lt;a href=&quot;https://www.udacity.com/course/nd001&quot; target=&quot;_blank&quot;&gt;Front End Web Developer Nanodegree&lt;/a&gt;. I like Udacity, I think their online platform is great and all of the classes from them I&#39;ve dabbled in have had really charismatic instructors. I do think their time estimates are a little off. For example, their &lt;a href=&quot;https://www.udacity.com/course/ud804&quot; target=&quot;_blank&quot;&gt;JavaScript Basics&lt;/a&gt; course is supposed to take three weeks, but it&#39;s only about 2 hours or so worth of videos. I did it in an evening. I mean, I&#39;m not exactly a beginner, but still...&lt;/p&gt;
&lt;p&gt;The other classes I&#39;ve taken from them had similarly generous estimates. Right now I am just marathoning through the classes themselves. I&#39;m not actually signed up for the &#39;Nanodegree&#39; program. While I like what they are trying to accomplish, I&#39;m just not sold that $200/mo is a justifiable price when all of the actual lectures and coursework is completely free. Granted it&#39;s still a helluva lot cheaper than college. Now according to the FAQ you can complete it as fast as you want. The next enrollment opens on March 4th, by then I should have had more than enough time to complete all of the actual classes in it, so I may enroll for a month, just long enough to submit all of my projects and earn the certificate. We&#39;ll see how I feel in March.&lt;/p&gt;
&lt;p&gt;And, holding to my philosophy that &lt;a title=&quot;Want to learn to program? Read a book!&quot; href=&quot;http://taylorhuston.me/?p=167&quot; target=&quot;_blank&quot;&gt;books are the best way to learn&lt;/a&gt;, I picked up a copy of &lt;a href=&quot;http://www.amazon.com/Node-js-MongoDB-AngularJS-Development-Developers/dp/0321995783#&quot; target=&quot;_blank&quot;&gt;Node.js, MongoDB, and AngularJS Web Development (Developer&#39;s Library)&lt;/a&gt; through Safari Books and have been reading through that. Not too deep in but so far it seems like a decently written book. I doubt it will make me an expert on any of those topics, but it should give me a broad enough overview of all of them and how they interact that I can then dive deeper with more specific books and tutorials.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Feb 2015 03:02:02 -0700</pubDate>
        <link>http://yourdomain.com/learning/2015/02/21/focusing-on-javascript.html</link>
        <guid isPermaLink="true">http://yourdomain.com/learning/2015/02/21/focusing-on-javascript.html</guid>
        
        <category>JavaScript</category>
        
        <category>Rails</category>
        
        
        <category>learning</category>
        
      </item>
    
      <item>
        <title>Will Code For Food</title>
        <description>&lt;p&gt;I&#39;ve decided to make a job board, &lt;a href=&quot;http://willcodeforfood.io/&quot; target=&quot;_blank&quot;&gt;Will Code For Food&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The premise is this (copied from the &#39;about&#39; page on that site):&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;Tired of seeing ‘junior’ positions that want 3-5 years of experience in 9 different stacks, some of which aren’t even 5 years old? Sick of wading through hundreds of job postings looking for one that you, as a new developer, are qualified for? Well so was I, so I decided to create this site.&lt;/p&gt;
&lt;p&gt;This job board is only for jobs, internships and apprenticeships for people still in college, new graduated, recently self taught, and anyone else who wants a developer job but has no work experience. It’s free to search, and for the time being free to post. I fit strongly into the category of someone who would use this site. Currently looking to get my first real developer job. After spending another evening looking through job boards and not finding much that someone with no actual work experience should realistically apply for, I got frustrated and decided to throw this site up. I grabbed the domain name and got to work.&lt;/p&gt;
&lt;p&gt;Phase 1 – Right now this site is built using WordPress and &lt;a href=&quot;http://www.wpjobmanager.com/&quot; target=&quot;_blank&quot;&gt;WP Job Manager&lt;/a&gt;. Functionality is fairly limited. You can browse jobs and apply to them by following the link. It’s not what I envision, but I wanted to get something up ASAP.&lt;/p&gt;
&lt;p&gt;Phase 2 – The next phase will be a complete job board built from scratch. Partly because I think this will be fun to build, and partly because I really want to customize it for developers. Features I have in mind for phase 2 include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete job-seeker profiles.&lt;/li&gt;
&lt;li&gt;The ability to sign up with and integrate your GitHub profile.&lt;/li&gt;
&lt;li&gt;The ability to apply to jobs directly.&lt;/li&gt;
&lt;li&gt;The ability to display some of your accomplishments, such as your HackerRank or Project Euler scores.&lt;/li&gt;
&lt;li&gt;The ability to display your progress in things like The Odin Project or Code School.&lt;/li&gt;
&lt;li&gt;A blog with submission from hiring managers and industry professionals full of advice on getting that first job.&lt;/li&gt;
&lt;li&gt;Anything else I come up with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;p&gt;Like I mentioned in that blurb, right now it&#39;s just Wordpress. Not that there&#39;s anything wrong with Wordpress, it&#39;s what I use for this blog and despite some &#39;pro&#39; developers looking down on it, I still happen to think it&#39;s a solid CMS. That being said I do plan on eventually building a custom solution for it. Not that I think it will be &lt;em&gt;better&lt;/em&gt; than Wordpress, but because I think it would be a really god learning exercise and a great addition to my portfolio. I have no idea how successfull it will be, not because I don&#39;t think it&#39;s a good idea, but I really have no idea how to market or properly monetize it against the insane amount of job boards already out there. But who knows, it could take off and running it could be my full time job one day.&lt;/p&gt;
&lt;p&gt;Take a look and drop me a line if you like what you see, and on the off chance you&#39;re hiring go ahead and post a job!&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Feb 2015 02:16:08 -0700</pubDate>
        <link>http://yourdomain.com/projects/2015/02/07/will-code-for-food.html</link>
        <guid isPermaLink="true">http://yourdomain.com/projects/2015/02/07/will-code-for-food.html</guid>
        
        <category>Will Code For Food</category>
        
        
        <category>projects</category>
        
      </item>
    
  </channel>
</rss>
